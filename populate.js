const dbConnection = require('./models/db.js'); 
const fs = require('fs/promises');
const path = require('path');

const populateDatabase = async () => {
  try {
    const sqlFilePath = path.join(__dirname, 'populate.sql');

    console.log('ðŸ“– Reading populate.sql file...');
    const sql = await fs.readFile(sqlFilePath, 'utf8');

    const queries = sql.split(';').filter(query => query.trim() !== '');

    console.log(`Found ${queries.length} queries to execute.`);
    
    for (const query of queries) {
      await dbConnection.query(query + ';'); 
    }

    console.log(' Database populated successfully!');

  } catch (error) {
    console.error('Error populating the database:');
    console.error(error);
  } finally {
    // 5. Ø¥ØºÙ„Ø§Ù‚ Ø§Ù„Ø§ØªØµØ§Ù„
    // ØªØ£ÙƒØ¯ Ù…Ù† Ø£Ù† Ø§Ù„ÙƒØ§Ø¦Ù† Ø§Ù„Ø°ÙŠ ØªØ³ØªÙˆØ±Ø¯Ù‡ Ù…Ù† db.js Ù„Ø¯ÙŠÙ‡ Ø¯Ø§Ù„Ø© .end()
    if (dbConnection && typeof dbConnection.end === 'function') {
      await dbConnection.end();
      console.log('Connection closed.');
    }
  }
};

// ØªØ´ØºÙŠÙ„ Ø§Ù„Ø³ÙƒØ±Ø¨Øª
populateDatabase();